//
// This file was generated by the JavaTM Architecture for XML Binding(JAXB) Reference Implementation, v2.2.8-b130911.1802 
// See <a href="http://java.sun.com/xml/jaxb">http://java.sun.com/xml/jaxb</a> 
// Any modifications to this file will be lost upon recompilation of the source schema. 
// Generated on: 2017.08.25 at 12:59:43 PM CDT 
//


package edu.utdallas.hltri.data.clinical_trials.jaxb;

import javax.xml.bind.annotation.XmlEnum;
import javax.xml.bind.annotation.XmlEnumValue;
import javax.xml.bind.annotation.XmlType;


/**
 * <p>Java class for phase_enum.
 * 
 * <p>The following schema fragment specifies the expected content contained within this class.
 * <p>
 * <pre>
 * &lt;simpleType name="phase_enum">
 *   &lt;restriction base="{http://www.w3.org/2001/XMLSchema}string">
 *     &lt;enumeration value="N/A"/>
 *     &lt;enumeration value="Early Phase 1"/>
 *     &lt;enumeration value="Phase 1"/>
 *     &lt;enumeration value="Phase 1/Phase 2"/>
 *     &lt;enumeration value="Phase 2"/>
 *     &lt;enumeration value="Phase 2/Phase 3"/>
 *     &lt;enumeration value="Phase 3"/>
 *     &lt;enumeration value="Phase 4"/>
 *   &lt;/restriction>
 * &lt;/simpleType>
 * </pre>
 * 
 */
@XmlType(name = "phase_enum")
@XmlEnum
public enum PhaseEnum {

    @XmlEnumValue("N/A")
    N_A("N/A"),
    @XmlEnumValue("Early Phase 1")
    EARLY_PHASE_1("Early Phase 1"),
    @XmlEnumValue("Phase 1")
    PHASE_1("Phase 1"),
    @XmlEnumValue("Phase 1/Phase 2")
    PHASE_1_PHASE_2("Phase 1/Phase 2"),
    @XmlEnumValue("Phase 2")
    PHASE_2("Phase 2"),
    @XmlEnumValue("Phase 2/Phase 3")
    PHASE_2_PHASE_3("Phase 2/Phase 3"),
    @XmlEnumValue("Phase 3")
    PHASE_3("Phase 3"),
    @XmlEnumValue("Phase 4")
    PHASE_4("Phase 4");
    private final String value;

    PhaseEnum(String v) {
        value = v;
    }

    public String value() {
        return value;
    }

    public static PhaseEnum fromValue(String v) {
        for (PhaseEnum c: PhaseEnum.values()) {
            if (c.value.equals(v)) {
                return c;
            }
        }
        throw new IllegalArgumentException(v);
    }

}

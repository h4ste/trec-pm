//
// This file was generated by the JavaTM Architecture for XML Binding(JAXB) Reference Implementation, v2.2.11 
// See <a href="http://java.sun.com/xml/jaxb">http://java.sun.com/xml/jaxb</a> 
// Any modifications to this file will be lost upon recompilation of the source schema. 
// Generated on: 2017.08.24 at 11:14:59 AM CDT 
//


package edu.utdallas.hltri.data.medline.jaxb.struct;

import java.io.Serializable;
import java.util.ArrayList;
import java.util.HashSet;
import java.util.List;
import java.util.Set;
import javax.xml.bind.annotation.XmlAccessType;
import javax.xml.bind.annotation.XmlAccessorType;
import javax.xml.bind.annotation.XmlAttribute;
import javax.xml.bind.annotation.XmlElement;
import javax.xml.bind.annotation.XmlRootElement;
import javax.xml.bind.annotation.XmlType;


/**
 * <p>Java class for anonymous complex type.
 * 
 * <p>The following schema fragment specifies the expected content contained within this class.
 * 
 * <pre>
 * &lt;complexType&gt;
 *   &lt;complexContent&gt;
 *     &lt;restriction base="{http://www.w3.org/2001/XMLSchema}anyType"&gt;
 *       &lt;sequence&gt;
 *         &lt;element ref="{}PMID"/&gt;
 *         &lt;element ref="{}DateCreated"/&gt;
 *         &lt;element ref="{}DateCompleted" minOccurs="0"/&gt;
 *         &lt;element ref="{}DateRevised" minOccurs="0"/&gt;
 *         &lt;element ref="{}Article"/&gt;
 *         &lt;element ref="{}MedlineJournalInfo"/&gt;
 *         &lt;element ref="{}ChemicalList" minOccurs="0"/&gt;
 *         &lt;element ref="{}SupplMeshList" minOccurs="0"/&gt;
 *         &lt;element ref="{}CitationSubset" maxOccurs="unbounded" minOccurs="0"/&gt;
 *         &lt;element ref="{}CommentsCorrectionsList" minOccurs="0"/&gt;
 *         &lt;element ref="{}GeneSymbolList" minOccurs="0"/&gt;
 *         &lt;element ref="{}MeshHeadingList" minOccurs="0"/&gt;
 *         &lt;element ref="{}NumberOfReferences" minOccurs="0"/&gt;
 *         &lt;element ref="{}PersonalNameSubjectList" minOccurs="0"/&gt;
 *         &lt;element ref="{}OtherID" maxOccurs="unbounded" minOccurs="0"/&gt;
 *         &lt;element ref="{}OtherAbstract" maxOccurs="unbounded" minOccurs="0"/&gt;
 *         &lt;element ref="{}KeywordList" maxOccurs="unbounded" minOccurs="0"/&gt;
 *         &lt;element ref="{}CoiStatement" minOccurs="0"/&gt;
 *         &lt;element ref="{}SpaceFlightMission" maxOccurs="unbounded" minOccurs="0"/&gt;
 *         &lt;element ref="{}InvestigatorList" minOccurs="0"/&gt;
 *         &lt;element ref="{}GeneralNote" maxOccurs="unbounded" minOccurs="0"/&gt;
 *       &lt;/sequence&gt;
 *       &lt;attribute name="Owner" default="NLM"&gt;
 *         &lt;simpleType&gt;
 *           &lt;restriction base="{http://www.w3.org/2001/XMLSchema}string"&gt;
 *             &lt;enumeration value="NLM"/&gt;
 *             &lt;enumeration value="NASA"/&gt;
 *             &lt;enumeration value="PIP"/&gt;
 *             &lt;enumeration value="KIE"/&gt;
 *             &lt;enumeration value="HSR"/&gt;
 *             &lt;enumeration value="HMD"/&gt;
 *             &lt;enumeration value="NOTNLM"/&gt;
 *           &lt;/restriction&gt;
 *         &lt;/simpleType&gt;
 *       &lt;/attribute&gt;
 *       &lt;attribute name="Status" use="required"&gt;
 *         &lt;simpleType&gt;
 *           &lt;restriction base="{http://www.w3.org/2001/XMLSchema}string"&gt;
 *             &lt;enumeration value="Completed"/&gt;
 *             &lt;enumeration value="In-Process"/&gt;
 *             &lt;enumeration value="PubMed-not-MEDLINE"/&gt;
 *             &lt;enumeration value="In-Data-Review"/&gt;
 *             &lt;enumeration value="Publisher"/&gt;
 *             &lt;enumeration value="MEDLINE"/&gt;
 *             &lt;enumeration value="OLDMEDLINE"/&gt;
 *           &lt;/restriction&gt;
 *         &lt;/simpleType&gt;
 *       &lt;/attribute&gt;
 *       &lt;attribute name="VersionID" type="{http://www.w3.org/2001/XMLSchema}string" /&gt;
 *       &lt;attribute name="VersionDate" type="{http://www.w3.org/2001/XMLSchema}string" /&gt;
 *       &lt;attribute name="IndexingMethod" type="{http://www.w3.org/2001/XMLSchema}string" /&gt;
 *     &lt;/restriction&gt;
 *   &lt;/complexContent&gt;
 * &lt;/complexType&gt;
 * </pre>
 * 
 * 
 */
@XmlAccessorType(XmlAccessType.FIELD)
@XmlType(name = "", propOrder = {
    "pmid",
    "dateCreated",
    "dateCompleted",
    "dateRevised",
    "article",
    "medlineJournalInfo",
    "chemicalList",
    "supplMeshList",
    "citationSubsets",
    "commentsCorrectionsList",
    "geneSymbolList",
    "meshHeadingList",
    "numberOfReferences",
    "personalNameSubjectList",
    "otherIDs",
    "otherAbstracts",
    "keywordLists",
    "coiStatement",
    "spaceFlightMissions",
    "investigatorList",
    "generalNotes"
})
@XmlRootElement(name = "MedlineCitation")
public class MedlineCitation implements Serializable
{

    private final static long serialVersionUID = 1L;
    @XmlElement(name = "PMID", required = true)
    protected PMID pmid;
    @XmlElement(name = "DateCreated", required = true)
    protected DateCreated dateCreated;
    @XmlElement(name = "DateCompleted")
    protected DateCompleted dateCompleted;
    @XmlElement(name = "DateRevised")
    protected DateRevised dateRevised;
    @XmlElement(name = "Article", required = true)
    protected Article article;
    @XmlElement(name = "MedlineJournalInfo", required = true)
    protected MedlineJournalInfo medlineJournalInfo;
    @XmlElement(name = "ChemicalList")
    protected ChemicalList chemicalList;
    @XmlElement(name = "SupplMeshList")
    protected SupplMeshList supplMeshList;
    @XmlElement(name = "CitationSubset")
    protected Set<String> citationSubsets;
    @XmlElement(name = "CommentsCorrectionsList")
    protected CommentsCorrectionsList commentsCorrectionsList;
    @XmlElement(name = "GeneSymbolList")
    protected GeneSymbolList geneSymbolList;
    @XmlElement(name = "MeshHeadingList")
    protected MeshHeadingList meshHeadingList;
    @XmlElement(name = "NumberOfReferences")
    protected String numberOfReferences;
    @XmlElement(name = "PersonalNameSubjectList")
    protected PersonalNameSubjectList personalNameSubjectList;
    @XmlElement(name = "OtherID")
    protected List<OtherID> otherIDs;
    @XmlElement(name = "OtherAbstract")
    protected List<OtherAbstract> otherAbstracts;
    @XmlElement(name = "KeywordList")
    protected List<KeywordList> keywordLists;
    @XmlElement(name = "CoiStatement")
    protected CoiStatement coiStatement;
    @XmlElement(name = "SpaceFlightMission")
    protected List<String> spaceFlightMissions;
    @XmlElement(name = "InvestigatorList")
    protected InvestigatorList investigatorList;
    @XmlElement(name = "GeneralNote")
    protected List<GeneralNote> generalNotes;
    @XmlAttribute(name = "Owner")
    protected String owner;
    @XmlAttribute(name = "Status", required = true)
    protected String status;
    @XmlAttribute(name = "VersionID")
    protected String versionID;
    @XmlAttribute(name = "VersionDate")
    protected String versionDate;
    @XmlAttribute(name = "IndexingMethod")
    protected String indexingMethod;

    /**
     * Gets the value of the pmid property.
     * 
     * @return
     *     possible object is
     *     {@link PMID }
     *     
     */
    public PMID getPMID() {
        return pmid;
    }

    /**
     * Sets the value of the pmid property.
     * 
     * @param value
     *     allowed object is
     *     {@link PMID }
     *     
     */
    public void setPMID(PMID value) {
        this.pmid = value;
    }

    /**
     * Gets the value of the dateCreated property.
     * 
     * @return
     *     possible object is
     *     {@link DateCreated }
     *     
     */
    public DateCreated getDateCreated() {
        return dateCreated;
    }

    /**
     * Sets the value of the dateCreated property.
     * 
     * @param value
     *     allowed object is
     *     {@link DateCreated }
     *     
     */
    public void setDateCreated(DateCreated value) {
        this.dateCreated = value;
    }

    /**
     * Gets the value of the dateCompleted property.
     * 
     * @return
     *     possible object is
     *     {@link DateCompleted }
     *     
     */
    public DateCompleted getDateCompleted() {
        return dateCompleted;
    }

    /**
     * Sets the value of the dateCompleted property.
     * 
     * @param value
     *     allowed object is
     *     {@link DateCompleted }
     *     
     */
    public void setDateCompleted(DateCompleted value) {
        this.dateCompleted = value;
    }

    /**
     * Gets the value of the dateRevised property.
     * 
     * @return
     *     possible object is
     *     {@link DateRevised }
     *     
     */
    public DateRevised getDateRevised() {
        return dateRevised;
    }

    /**
     * Sets the value of the dateRevised property.
     * 
     * @param value
     *     allowed object is
     *     {@link DateRevised }
     *     
     */
    public void setDateRevised(DateRevised value) {
        this.dateRevised = value;
    }

    /**
     * Gets the value of the article property.
     * 
     * @return
     *     possible object is
     *     {@link Article }
     *     
     */
    public Article getArticle() {
        return article;
    }

    /**
     * Sets the value of the article property.
     * 
     * @param value
     *     allowed object is
     *     {@link Article }
     *     
     */
    public void setArticle(Article value) {
        this.article = value;
    }

    /**
     * Gets the value of the medlineJournalInfo property.
     * 
     * @return
     *     possible object is
     *     {@link MedlineJournalInfo }
     *     
     */
    public MedlineJournalInfo getMedlineJournalInfo() {
        return medlineJournalInfo;
    }

    /**
     * Sets the value of the medlineJournalInfo property.
     * 
     * @param value
     *     allowed object is
     *     {@link MedlineJournalInfo }
     *     
     */
    public void setMedlineJournalInfo(MedlineJournalInfo value) {
        this.medlineJournalInfo = value;
    }

    /**
     * Gets the value of the chemicalList property.
     * 
     * @return
     *     possible object is
     *     {@link ChemicalList }
     *     
     */
    public ChemicalList getChemicalList() {
        return chemicalList;
    }

    /**
     * Sets the value of the chemicalList property.
     * 
     * @param value
     *     allowed object is
     *     {@link ChemicalList }
     *     
     */
    public void setChemicalList(ChemicalList value) {
        this.chemicalList = value;
    }

    /**
     * Gets the value of the supplMeshList property.
     * 
     * @return
     *     possible object is
     *     {@link SupplMeshList }
     *     
     */
    public SupplMeshList getSupplMeshList() {
        return supplMeshList;
    }

    /**
     * Sets the value of the supplMeshList property.
     * 
     * @param value
     *     allowed object is
     *     {@link SupplMeshList }
     *     
     */
    public void setSupplMeshList(SupplMeshList value) {
        this.supplMeshList = value;
    }

    /**
     * Gets the value of the citationSubsets property.
     * 
     * <p>
     * This accessor method returns a reference to the live list,
     * not a snapshot. Therefore any modification you make to the
     * returned list will be present inside the JAXB object.
     * This is why there is not a <CODE>set</CODE> method for the citationSubsets property.
     * 
     * <p>
     * For example, to add a new item, do as follows:
     * <pre>
     *    getCitationSubsets().add(newItem);
     * </pre>
     * 
     * 
     * <p>
     * Objects of the following type(s) are allowed in the list
     * {@link String }
     * 
     * 
     */
    public Set<String> getCitationSubsets() {
        if (citationSubsets == null) {
            citationSubsets = new HashSet<String>();
        }
        return this.citationSubsets;
    }

    /**
     * Gets the value of the commentsCorrectionsList property.
     * 
     * @return
     *     possible object is
     *     {@link CommentsCorrectionsList }
     *     
     */
    public CommentsCorrectionsList getCommentsCorrectionsList() {
        return commentsCorrectionsList;
    }

    /**
     * Sets the value of the commentsCorrectionsList property.
     * 
     * @param value
     *     allowed object is
     *     {@link CommentsCorrectionsList }
     *     
     */
    public void setCommentsCorrectionsList(CommentsCorrectionsList value) {
        this.commentsCorrectionsList = value;
    }

    /**
     * Gets the value of the geneSymbolList property.
     * 
     * @return
     *     possible object is
     *     {@link GeneSymbolList }
     *     
     */
    public GeneSymbolList getGeneSymbolList() {
        return geneSymbolList;
    }

    /**
     * Sets the value of the geneSymbolList property.
     * 
     * @param value
     *     allowed object is
     *     {@link GeneSymbolList }
     *     
     */
    public void setGeneSymbolList(GeneSymbolList value) {
        this.geneSymbolList = value;
    }

    /**
     * Gets the value of the meshHeadingList property.
     * 
     * @return
     *     possible object is
     *     {@link MeshHeadingList }
     *     
     */
    public MeshHeadingList getMeshHeadingList() {
        return meshHeadingList;
    }

    /**
     * Sets the value of the meshHeadingList property.
     * 
     * @param value
     *     allowed object is
     *     {@link MeshHeadingList }
     *     
     */
    public void setMeshHeadingList(MeshHeadingList value) {
        this.meshHeadingList = value;
    }

    /**
     * Gets the value of the numberOfReferences property.
     * 
     * @return
     *     possible object is
     *     {@link String }
     *     
     */
    public String getNumberOfReferences() {
        return numberOfReferences;
    }

    /**
     * Sets the value of the numberOfReferences property.
     * 
     * @param value
     *     allowed object is
     *     {@link String }
     *     
     */
    public void setNumberOfReferences(String value) {
        this.numberOfReferences = value;
    }

    /**
     * Gets the value of the personalNameSubjectList property.
     * 
     * @return
     *     possible object is
     *     {@link PersonalNameSubjectList }
     *     
     */
    public PersonalNameSubjectList getPersonalNameSubjectList() {
        return personalNameSubjectList;
    }

    /**
     * Sets the value of the personalNameSubjectList property.
     * 
     * @param value
     *     allowed object is
     *     {@link PersonalNameSubjectList }
     *     
     */
    public void setPersonalNameSubjectList(PersonalNameSubjectList value) {
        this.personalNameSubjectList = value;
    }

    /**
     * Gets the value of the otherIDs property.
     * 
     * <p>
     * This accessor method returns a reference to the live list,
     * not a snapshot. Therefore any modification you make to the
     * returned list will be present inside the JAXB object.
     * This is why there is not a <CODE>set</CODE> method for the otherIDs property.
     * 
     * <p>
     * For example, to add a new item, do as follows:
     * <pre>
     *    getOtherIDs().add(newItem);
     * </pre>
     * 
     * 
     * <p>
     * Objects of the following type(s) are allowed in the list
     * {@link OtherID }
     * 
     * 
     */
    public List<OtherID> getOtherIDs() {
        if (otherIDs == null) {
            otherIDs = new ArrayList<OtherID>();
        }
        return this.otherIDs;
    }

    /**
     * Gets the value of the otherAbstracts property.
     * 
     * <p>
     * This accessor method returns a reference to the live list,
     * not a snapshot. Therefore any modification you make to the
     * returned list will be present inside the JAXB object.
     * This is why there is not a <CODE>set</CODE> method for the otherAbstracts property.
     * 
     * <p>
     * For example, to add a new item, do as follows:
     * <pre>
     *    getOtherAbstracts().add(newItem);
     * </pre>
     * 
     * 
     * <p>
     * Objects of the following type(s) are allowed in the list
     * {@link OtherAbstract }
     * 
     * 
     */
    public List<OtherAbstract> getOtherAbstracts() {
        if (otherAbstracts == null) {
            otherAbstracts = new ArrayList<OtherAbstract>();
        }
        return this.otherAbstracts;
    }

    /**
     * Gets the value of the keywordLists property.
     * 
     * <p>
     * This accessor method returns a reference to the live list,
     * not a snapshot. Therefore any modification you make to the
     * returned list will be present inside the JAXB object.
     * This is why there is not a <CODE>set</CODE> method for the keywordLists property.
     * 
     * <p>
     * For example, to add a new item, do as follows:
     * <pre>
     *    getKeywordLists().add(newItem);
     * </pre>
     * 
     * 
     * <p>
     * Objects of the following type(s) are allowed in the list
     * {@link KeywordList }
     * 
     * 
     */
    public List<KeywordList> getKeywordLists() {
        if (keywordLists == null) {
            keywordLists = new ArrayList<KeywordList>();
        }
        return this.keywordLists;
    }

    /**
     * Gets the value of the coiStatement property.
     * 
     * @return
     *     possible object is
     *     {@link CoiStatement }
     *     
     */
    public CoiStatement getCoiStatement() {
        return coiStatement;
    }

    /**
     * Sets the value of the coiStatement property.
     * 
     * @param value
     *     allowed object is
     *     {@link CoiStatement }
     *     
     */
    public void setCoiStatement(CoiStatement value) {
        this.coiStatement = value;
    }

    /**
     * Gets the value of the spaceFlightMissions property.
     * 
     * <p>
     * This accessor method returns a reference to the live list,
     * not a snapshot. Therefore any modification you make to the
     * returned list will be present inside the JAXB object.
     * This is why there is not a <CODE>set</CODE> method for the spaceFlightMissions property.
     * 
     * <p>
     * For example, to add a new item, do as follows:
     * <pre>
     *    getSpaceFlightMissions().add(newItem);
     * </pre>
     * 
     * 
     * <p>
     * Objects of the following type(s) are allowed in the list
     * {@link String }
     * 
     * 
     */
    public List<String> getSpaceFlightMissions() {
        if (spaceFlightMissions == null) {
            spaceFlightMissions = new ArrayList<String>();
        }
        return this.spaceFlightMissions;
    }

    /**
     * Gets the value of the investigatorList property.
     * 
     * @return
     *     possible object is
     *     {@link InvestigatorList }
     *     
     */
    public InvestigatorList getInvestigatorList() {
        return investigatorList;
    }

    /**
     * Sets the value of the investigatorList property.
     * 
     * @param value
     *     allowed object is
     *     {@link InvestigatorList }
     *     
     */
    public void setInvestigatorList(InvestigatorList value) {
        this.investigatorList = value;
    }

    /**
     * Gets the value of the generalNotes property.
     * 
     * <p>
     * This accessor method returns a reference to the live list,
     * not a snapshot. Therefore any modification you make to the
     * returned list will be present inside the JAXB object.
     * This is why there is not a <CODE>set</CODE> method for the generalNotes property.
     * 
     * <p>
     * For example, to add a new item, do as follows:
     * <pre>
     *    getGeneralNotes().add(newItem);
     * </pre>
     * 
     * 
     * <p>
     * Objects of the following type(s) are allowed in the list
     * {@link GeneralNote }
     * 
     * 
     */
    public List<GeneralNote> getGeneralNotes() {
        if (generalNotes == null) {
            generalNotes = new ArrayList<GeneralNote>();
        }
        return this.generalNotes;
    }

    /**
     * Gets the value of the owner property.
     * 
     * @return
     *     possible object is
     *     {@link String }
     *     
     */
    public String getOwner() {
        if (owner == null) {
            return "NLM";
        } else {
            return owner;
        }
    }

    /**
     * Sets the value of the owner property.
     * 
     * @param value
     *     allowed object is
     *     {@link String }
     *     
     */
    public void setOwner(String value) {
        this.owner = value;
    }

    /**
     * Gets the value of the status property.
     * 
     * @return
     *     possible object is
     *     {@link String }
     *     
     */
    public String getStatus() {
        return status;
    }

    /**
     * Sets the value of the status property.
     * 
     * @param value
     *     allowed object is
     *     {@link String }
     *     
     */
    public void setStatus(String value) {
        this.status = value;
    }

    /**
     * Gets the value of the versionID property.
     * 
     * @return
     *     possible object is
     *     {@link String }
     *     
     */
    public String getVersionID() {
        return versionID;
    }

    /**
     * Sets the value of the versionID property.
     * 
     * @param value
     *     allowed object is
     *     {@link String }
     *     
     */
    public void setVersionID(String value) {
        this.versionID = value;
    }

    /**
     * Gets the value of the versionDate property.
     * 
     * @return
     *     possible object is
     *     {@link String }
     *     
     */
    public String getVersionDate() {
        return versionDate;
    }

    /**
     * Sets the value of the versionDate property.
     * 
     * @param value
     *     allowed object is
     *     {@link String }
     *     
     */
    public void setVersionDate(String value) {
        this.versionDate = value;
    }

    /**
     * Gets the value of the indexingMethod property.
     * 
     * @return
     *     possible object is
     *     {@link String }
     *     
     */
    public String getIndexingMethod() {
        return indexingMethod;
    }

    /**
     * Sets the value of the indexingMethod property.
     * 
     * @param value
     *     allowed object is
     *     {@link String }
     *     
     */
    public void setIndexingMethod(String value) {
        this.indexingMethod = value;
    }

    public boolean equals(java.lang.Object object) {
        if ((object == null)||(this.getClass()!= object.getClass())) {
            return false;
        }
        if (this == object) {
            return true;
        }
        final MedlineCitation that = ((MedlineCitation) object);
        {
            PMID leftPMID;
            leftPMID = this.getPMID();
            PMID rightPMID;
            rightPMID = that.getPMID();
            if (this.pmid!= null) {
                if (that.pmid!= null) {
                    if (!leftPMID.equals(rightPMID)) {
                        return false;
                    }
                } else {
                    return false;
                }
            } else {
                if (that.pmid!= null) {
                    return false;
                }
            }
        }
        {
            DateCreated leftDateCreated;
            leftDateCreated = this.getDateCreated();
            DateCreated rightDateCreated;
            rightDateCreated = that.getDateCreated();
            if (this.dateCreated!= null) {
                if (that.dateCreated!= null) {
                    if (!leftDateCreated.equals(rightDateCreated)) {
                        return false;
                    }
                } else {
                    return false;
                }
            } else {
                if (that.dateCreated!= null) {
                    return false;
                }
            }
        }
        {
            DateCompleted leftDateCompleted;
            leftDateCompleted = this.getDateCompleted();
            DateCompleted rightDateCompleted;
            rightDateCompleted = that.getDateCompleted();
            if (this.dateCompleted!= null) {
                if (that.dateCompleted!= null) {
                    if (!leftDateCompleted.equals(rightDateCompleted)) {
                        return false;
                    }
                } else {
                    return false;
                }
            } else {
                if (that.dateCompleted!= null) {
                    return false;
                }
            }
        }
        {
            DateRevised leftDateRevised;
            leftDateRevised = this.getDateRevised();
            DateRevised rightDateRevised;
            rightDateRevised = that.getDateRevised();
            if (this.dateRevised!= null) {
                if (that.dateRevised!= null) {
                    if (!leftDateRevised.equals(rightDateRevised)) {
                        return false;
                    }
                } else {
                    return false;
                }
            } else {
                if (that.dateRevised!= null) {
                    return false;
                }
            }
        }
        {
            Article leftArticle;
            leftArticle = this.getArticle();
            Article rightArticle;
            rightArticle = that.getArticle();
            if (this.article!= null) {
                if (that.article!= null) {
                    if (!leftArticle.equals(rightArticle)) {
                        return false;
                    }
                } else {
                    return false;
                }
            } else {
                if (that.article!= null) {
                    return false;
                }
            }
        }
        {
            MedlineJournalInfo leftMedlineJournalInfo;
            leftMedlineJournalInfo = this.getMedlineJournalInfo();
            MedlineJournalInfo rightMedlineJournalInfo;
            rightMedlineJournalInfo = that.getMedlineJournalInfo();
            if (this.medlineJournalInfo!= null) {
                if (that.medlineJournalInfo!= null) {
                    if (!leftMedlineJournalInfo.equals(rightMedlineJournalInfo)) {
                        return false;
                    }
                } else {
                    return false;
                }
            } else {
                if (that.medlineJournalInfo!= null) {
                    return false;
                }
            }
        }
        {
            ChemicalList leftChemicalList;
            leftChemicalList = this.getChemicalList();
            ChemicalList rightChemicalList;
            rightChemicalList = that.getChemicalList();
            if (this.chemicalList!= null) {
                if (that.chemicalList!= null) {
                    if (!leftChemicalList.equals(rightChemicalList)) {
                        return false;
                    }
                } else {
                    return false;
                }
            } else {
                if (that.chemicalList!= null) {
                    return false;
                }
            }
        }
        {
            SupplMeshList leftSupplMeshList;
            leftSupplMeshList = this.getSupplMeshList();
            SupplMeshList rightSupplMeshList;
            rightSupplMeshList = that.getSupplMeshList();
            if (this.supplMeshList!= null) {
                if (that.supplMeshList!= null) {
                    if (!leftSupplMeshList.equals(rightSupplMeshList)) {
                        return false;
                    }
                } else {
                    return false;
                }
            } else {
                if (that.supplMeshList!= null) {
                    return false;
                }
            }
        }
        {
            Set<String> leftCitationSubsets;
            leftCitationSubsets = (((this.citationSubsets!= null)&&(!this.citationSubsets.isEmpty()))?this.getCitationSubsets():null);
            Set<String> rightCitationSubsets;
            rightCitationSubsets = (((that.citationSubsets!= null)&&(!that.citationSubsets.isEmpty()))?that.getCitationSubsets():null);
            if ((this.citationSubsets!= null)&&(!this.citationSubsets.isEmpty())) {
                if ((that.citationSubsets!= null)&&(!that.citationSubsets.isEmpty())) {
                    if (!leftCitationSubsets.equals(rightCitationSubsets)) {
                        return false;
                    }
                } else {
                    return false;
                }
            } else {
                if ((that.citationSubsets!= null)&&(!that.citationSubsets.isEmpty())) {
                    return false;
                }
            }
        }
        {
            CommentsCorrectionsList leftCommentsCorrectionsList;
            leftCommentsCorrectionsList = this.getCommentsCorrectionsList();
            CommentsCorrectionsList rightCommentsCorrectionsList;
            rightCommentsCorrectionsList = that.getCommentsCorrectionsList();
            if (this.commentsCorrectionsList!= null) {
                if (that.commentsCorrectionsList!= null) {
                    if (!leftCommentsCorrectionsList.equals(rightCommentsCorrectionsList)) {
                        return false;
                    }
                } else {
                    return false;
                }
            } else {
                if (that.commentsCorrectionsList!= null) {
                    return false;
                }
            }
        }
        {
            GeneSymbolList leftGeneSymbolList;
            leftGeneSymbolList = this.getGeneSymbolList();
            GeneSymbolList rightGeneSymbolList;
            rightGeneSymbolList = that.getGeneSymbolList();
            if (this.geneSymbolList!= null) {
                if (that.geneSymbolList!= null) {
                    if (!leftGeneSymbolList.equals(rightGeneSymbolList)) {
                        return false;
                    }
                } else {
                    return false;
                }
            } else {
                if (that.geneSymbolList!= null) {
                    return false;
                }
            }
        }
        {
            MeshHeadingList leftMeshHeadingList;
            leftMeshHeadingList = this.getMeshHeadingList();
            MeshHeadingList rightMeshHeadingList;
            rightMeshHeadingList = that.getMeshHeadingList();
            if (this.meshHeadingList!= null) {
                if (that.meshHeadingList!= null) {
                    if (!leftMeshHeadingList.equals(rightMeshHeadingList)) {
                        return false;
                    }
                } else {
                    return false;
                }
            } else {
                if (that.meshHeadingList!= null) {
                    return false;
                }
            }
        }
        {
            String leftNumberOfReferences;
            leftNumberOfReferences = this.getNumberOfReferences();
            String rightNumberOfReferences;
            rightNumberOfReferences = that.getNumberOfReferences();
            if (this.numberOfReferences!= null) {
                if (that.numberOfReferences!= null) {
                    if (!leftNumberOfReferences.equals(rightNumberOfReferences)) {
                        return false;
                    }
                } else {
                    return false;
                }
            } else {
                if (that.numberOfReferences!= null) {
                    return false;
                }
            }
        }
        {
            PersonalNameSubjectList leftPersonalNameSubjectList;
            leftPersonalNameSubjectList = this.getPersonalNameSubjectList();
            PersonalNameSubjectList rightPersonalNameSubjectList;
            rightPersonalNameSubjectList = that.getPersonalNameSubjectList();
            if (this.personalNameSubjectList!= null) {
                if (that.personalNameSubjectList!= null) {
                    if (!leftPersonalNameSubjectList.equals(rightPersonalNameSubjectList)) {
                        return false;
                    }
                } else {
                    return false;
                }
            } else {
                if (that.personalNameSubjectList!= null) {
                    return false;
                }
            }
        }
        {
            List<OtherID> leftOtherIDs;
            leftOtherIDs = (((this.otherIDs!= null)&&(!this.otherIDs.isEmpty()))?this.getOtherIDs():null);
            List<OtherID> rightOtherIDs;
            rightOtherIDs = (((that.otherIDs!= null)&&(!that.otherIDs.isEmpty()))?that.getOtherIDs():null);
            if ((this.otherIDs!= null)&&(!this.otherIDs.isEmpty())) {
                if ((that.otherIDs!= null)&&(!that.otherIDs.isEmpty())) {
                    if (!leftOtherIDs.equals(rightOtherIDs)) {
                        return false;
                    }
                } else {
                    return false;
                }
            } else {
                if ((that.otherIDs!= null)&&(!that.otherIDs.isEmpty())) {
                    return false;
                }
            }
        }
        {
            List<OtherAbstract> leftOtherAbstracts;
            leftOtherAbstracts = (((this.otherAbstracts!= null)&&(!this.otherAbstracts.isEmpty()))?this.getOtherAbstracts():null);
            List<OtherAbstract> rightOtherAbstracts;
            rightOtherAbstracts = (((that.otherAbstracts!= null)&&(!that.otherAbstracts.isEmpty()))?that.getOtherAbstracts():null);
            if ((this.otherAbstracts!= null)&&(!this.otherAbstracts.isEmpty())) {
                if ((that.otherAbstracts!= null)&&(!that.otherAbstracts.isEmpty())) {
                    if (!leftOtherAbstracts.equals(rightOtherAbstracts)) {
                        return false;
                    }
                } else {
                    return false;
                }
            } else {
                if ((that.otherAbstracts!= null)&&(!that.otherAbstracts.isEmpty())) {
                    return false;
                }
            }
        }
        {
            List<KeywordList> leftKeywordLists;
            leftKeywordLists = (((this.keywordLists!= null)&&(!this.keywordLists.isEmpty()))?this.getKeywordLists():null);
            List<KeywordList> rightKeywordLists;
            rightKeywordLists = (((that.keywordLists!= null)&&(!that.keywordLists.isEmpty()))?that.getKeywordLists():null);
            if ((this.keywordLists!= null)&&(!this.keywordLists.isEmpty())) {
                if ((that.keywordLists!= null)&&(!that.keywordLists.isEmpty())) {
                    if (!leftKeywordLists.equals(rightKeywordLists)) {
                        return false;
                    }
                } else {
                    return false;
                }
            } else {
                if ((that.keywordLists!= null)&&(!that.keywordLists.isEmpty())) {
                    return false;
                }
            }
        }
        {
            CoiStatement leftCoiStatement;
            leftCoiStatement = this.getCoiStatement();
            CoiStatement rightCoiStatement;
            rightCoiStatement = that.getCoiStatement();
            if (this.coiStatement!= null) {
                if (that.coiStatement!= null) {
                    if (!leftCoiStatement.equals(rightCoiStatement)) {
                        return false;
                    }
                } else {
                    return false;
                }
            } else {
                if (that.coiStatement!= null) {
                    return false;
                }
            }
        }
        {
            List<String> leftSpaceFlightMissions;
            leftSpaceFlightMissions = (((this.spaceFlightMissions!= null)&&(!this.spaceFlightMissions.isEmpty()))?this.getSpaceFlightMissions():null);
            List<String> rightSpaceFlightMissions;
            rightSpaceFlightMissions = (((that.spaceFlightMissions!= null)&&(!that.spaceFlightMissions.isEmpty()))?that.getSpaceFlightMissions():null);
            if ((this.spaceFlightMissions!= null)&&(!this.spaceFlightMissions.isEmpty())) {
                if ((that.spaceFlightMissions!= null)&&(!that.spaceFlightMissions.isEmpty())) {
                    if (!leftSpaceFlightMissions.equals(rightSpaceFlightMissions)) {
                        return false;
                    }
                } else {
                    return false;
                }
            } else {
                if ((that.spaceFlightMissions!= null)&&(!that.spaceFlightMissions.isEmpty())) {
                    return false;
                }
            }
        }
        {
            InvestigatorList leftInvestigatorList;
            leftInvestigatorList = this.getInvestigatorList();
            InvestigatorList rightInvestigatorList;
            rightInvestigatorList = that.getInvestigatorList();
            if (this.investigatorList!= null) {
                if (that.investigatorList!= null) {
                    if (!leftInvestigatorList.equals(rightInvestigatorList)) {
                        return false;
                    }
                } else {
                    return false;
                }
            } else {
                if (that.investigatorList!= null) {
                    return false;
                }
            }
        }
        {
            List<GeneralNote> leftGeneralNotes;
            leftGeneralNotes = (((this.generalNotes!= null)&&(!this.generalNotes.isEmpty()))?this.getGeneralNotes():null);
            List<GeneralNote> rightGeneralNotes;
            rightGeneralNotes = (((that.generalNotes!= null)&&(!that.generalNotes.isEmpty()))?that.getGeneralNotes():null);
            if ((this.generalNotes!= null)&&(!this.generalNotes.isEmpty())) {
                if ((that.generalNotes!= null)&&(!that.generalNotes.isEmpty())) {
                    if (!leftGeneralNotes.equals(rightGeneralNotes)) {
                        return false;
                    }
                } else {
                    return false;
                }
            } else {
                if ((that.generalNotes!= null)&&(!that.generalNotes.isEmpty())) {
                    return false;
                }
            }
        }
        {
            String leftOwner;
            leftOwner = this.getOwner();
            String rightOwner;
            rightOwner = that.getOwner();
            if (this.owner!= null) {
                if (that.owner!= null) {
                    if (!leftOwner.equals(rightOwner)) {
                        return false;
                    }
                } else {
                    return false;
                }
            } else {
                if (that.owner!= null) {
                    return false;
                }
            }
        }
        {
            String leftStatus;
            leftStatus = this.getStatus();
            String rightStatus;
            rightStatus = that.getStatus();
            if (this.status!= null) {
                if (that.status!= null) {
                    if (!leftStatus.equals(rightStatus)) {
                        return false;
                    }
                } else {
                    return false;
                }
            } else {
                if (that.status!= null) {
                    return false;
                }
            }
        }
        {
            String leftVersionID;
            leftVersionID = this.getVersionID();
            String rightVersionID;
            rightVersionID = that.getVersionID();
            if (this.versionID!= null) {
                if (that.versionID!= null) {
                    if (!leftVersionID.equals(rightVersionID)) {
                        return false;
                    }
                } else {
                    return false;
                }
            } else {
                if (that.versionID!= null) {
                    return false;
                }
            }
        }
        {
            String leftVersionDate;
            leftVersionDate = this.getVersionDate();
            String rightVersionDate;
            rightVersionDate = that.getVersionDate();
            if (this.versionDate!= null) {
                if (that.versionDate!= null) {
                    if (!leftVersionDate.equals(rightVersionDate)) {
                        return false;
                    }
                } else {
                    return false;
                }
            } else {
                if (that.versionDate!= null) {
                    return false;
                }
            }
        }
        {
            String leftIndexingMethod;
            leftIndexingMethod = this.getIndexingMethod();
            String rightIndexingMethod;
            rightIndexingMethod = that.getIndexingMethod();
            if (this.indexingMethod!= null) {
                if (that.indexingMethod!= null) {
                    if (!leftIndexingMethod.equals(rightIndexingMethod)) {
                        return false;
                    }
                } else {
                    return false;
                }
            } else {
                if (that.indexingMethod!= null) {
                    return false;
                }
            }
        }
        return true;
    }

    public int hashCode() {
        int currentHashCode = 1;
        {
            currentHashCode = (currentHashCode* 31);
            PMID thePMID;
            thePMID = this.getPMID();
            if (this.pmid!= null) {
                currentHashCode += thePMID.hashCode();
            }
        }
        {
            currentHashCode = (currentHashCode* 31);
            DateCreated theDateCreated;
            theDateCreated = this.getDateCreated();
            if (this.dateCreated!= null) {
                currentHashCode += theDateCreated.hashCode();
            }
        }
        {
            currentHashCode = (currentHashCode* 31);
            DateCompleted theDateCompleted;
            theDateCompleted = this.getDateCompleted();
            if (this.dateCompleted!= null) {
                currentHashCode += theDateCompleted.hashCode();
            }
        }
        {
            currentHashCode = (currentHashCode* 31);
            DateRevised theDateRevised;
            theDateRevised = this.getDateRevised();
            if (this.dateRevised!= null) {
                currentHashCode += theDateRevised.hashCode();
            }
        }
        {
            currentHashCode = (currentHashCode* 31);
            Article theArticle;
            theArticle = this.getArticle();
            if (this.article!= null) {
                currentHashCode += theArticle.hashCode();
            }
        }
        {
            currentHashCode = (currentHashCode* 31);
            MedlineJournalInfo theMedlineJournalInfo;
            theMedlineJournalInfo = this.getMedlineJournalInfo();
            if (this.medlineJournalInfo!= null) {
                currentHashCode += theMedlineJournalInfo.hashCode();
            }
        }
        {
            currentHashCode = (currentHashCode* 31);
            ChemicalList theChemicalList;
            theChemicalList = this.getChemicalList();
            if (this.chemicalList!= null) {
                currentHashCode += theChemicalList.hashCode();
            }
        }
        {
            currentHashCode = (currentHashCode* 31);
            SupplMeshList theSupplMeshList;
            theSupplMeshList = this.getSupplMeshList();
            if (this.supplMeshList!= null) {
                currentHashCode += theSupplMeshList.hashCode();
            }
        }
        {
            currentHashCode = (currentHashCode* 31);
            Set<String> theCitationSubsets;
            theCitationSubsets = (((this.citationSubsets!= null)&&(!this.citationSubsets.isEmpty()))?this.getCitationSubsets():null);
            if ((this.citationSubsets!= null)&&(!this.citationSubsets.isEmpty())) {
                currentHashCode += theCitationSubsets.hashCode();
            }
        }
        {
            currentHashCode = (currentHashCode* 31);
            CommentsCorrectionsList theCommentsCorrectionsList;
            theCommentsCorrectionsList = this.getCommentsCorrectionsList();
            if (this.commentsCorrectionsList!= null) {
                currentHashCode += theCommentsCorrectionsList.hashCode();
            }
        }
        {
            currentHashCode = (currentHashCode* 31);
            GeneSymbolList theGeneSymbolList;
            theGeneSymbolList = this.getGeneSymbolList();
            if (this.geneSymbolList!= null) {
                currentHashCode += theGeneSymbolList.hashCode();
            }
        }
        {
            currentHashCode = (currentHashCode* 31);
            MeshHeadingList theMeshHeadingList;
            theMeshHeadingList = this.getMeshHeadingList();
            if (this.meshHeadingList!= null) {
                currentHashCode += theMeshHeadingList.hashCode();
            }
        }
        {
            currentHashCode = (currentHashCode* 31);
            String theNumberOfReferences;
            theNumberOfReferences = this.getNumberOfReferences();
            if (this.numberOfReferences!= null) {
                currentHashCode += theNumberOfReferences.hashCode();
            }
        }
        {
            currentHashCode = (currentHashCode* 31);
            PersonalNameSubjectList thePersonalNameSubjectList;
            thePersonalNameSubjectList = this.getPersonalNameSubjectList();
            if (this.personalNameSubjectList!= null) {
                currentHashCode += thePersonalNameSubjectList.hashCode();
            }
        }
        {
            currentHashCode = (currentHashCode* 31);
            List<OtherID> theOtherIDs;
            theOtherIDs = (((this.otherIDs!= null)&&(!this.otherIDs.isEmpty()))?this.getOtherIDs():null);
            if ((this.otherIDs!= null)&&(!this.otherIDs.isEmpty())) {
                currentHashCode += theOtherIDs.hashCode();
            }
        }
        {
            currentHashCode = (currentHashCode* 31);
            List<OtherAbstract> theOtherAbstracts;
            theOtherAbstracts = (((this.otherAbstracts!= null)&&(!this.otherAbstracts.isEmpty()))?this.getOtherAbstracts():null);
            if ((this.otherAbstracts!= null)&&(!this.otherAbstracts.isEmpty())) {
                currentHashCode += theOtherAbstracts.hashCode();
            }
        }
        {
            currentHashCode = (currentHashCode* 31);
            List<KeywordList> theKeywordLists;
            theKeywordLists = (((this.keywordLists!= null)&&(!this.keywordLists.isEmpty()))?this.getKeywordLists():null);
            if ((this.keywordLists!= null)&&(!this.keywordLists.isEmpty())) {
                currentHashCode += theKeywordLists.hashCode();
            }
        }
        {
            currentHashCode = (currentHashCode* 31);
            CoiStatement theCoiStatement;
            theCoiStatement = this.getCoiStatement();
            if (this.coiStatement!= null) {
                currentHashCode += theCoiStatement.hashCode();
            }
        }
        {
            currentHashCode = (currentHashCode* 31);
            List<String> theSpaceFlightMissions;
            theSpaceFlightMissions = (((this.spaceFlightMissions!= null)&&(!this.spaceFlightMissions.isEmpty()))?this.getSpaceFlightMissions():null);
            if ((this.spaceFlightMissions!= null)&&(!this.spaceFlightMissions.isEmpty())) {
                currentHashCode += theSpaceFlightMissions.hashCode();
            }
        }
        {
            currentHashCode = (currentHashCode* 31);
            InvestigatorList theInvestigatorList;
            theInvestigatorList = this.getInvestigatorList();
            if (this.investigatorList!= null) {
                currentHashCode += theInvestigatorList.hashCode();
            }
        }
        {
            currentHashCode = (currentHashCode* 31);
            List<GeneralNote> theGeneralNotes;
            theGeneralNotes = (((this.generalNotes!= null)&&(!this.generalNotes.isEmpty()))?this.getGeneralNotes():null);
            if ((this.generalNotes!= null)&&(!this.generalNotes.isEmpty())) {
                currentHashCode += theGeneralNotes.hashCode();
            }
        }
        {
            currentHashCode = (currentHashCode* 31);
            String theOwner;
            theOwner = this.getOwner();
            if (this.owner!= null) {
                currentHashCode += theOwner.hashCode();
            }
        }
        {
            currentHashCode = (currentHashCode* 31);
            String theStatus;
            theStatus = this.getStatus();
            if (this.status!= null) {
                currentHashCode += theStatus.hashCode();
            }
        }
        {
            currentHashCode = (currentHashCode* 31);
            String theVersionID;
            theVersionID = this.getVersionID();
            if (this.versionID!= null) {
                currentHashCode += theVersionID.hashCode();
            }
        }
        {
            currentHashCode = (currentHashCode* 31);
            String theVersionDate;
            theVersionDate = this.getVersionDate();
            if (this.versionDate!= null) {
                currentHashCode += theVersionDate.hashCode();
            }
        }
        {
            currentHashCode = (currentHashCode* 31);
            String theIndexingMethod;
            theIndexingMethod = this.getIndexingMethod();
            if (this.indexingMethod!= null) {
                currentHashCode += theIndexingMethod.hashCode();
            }
        }
        return currentHashCode;
    }

}

//
// This file was generated by the JavaTM Architecture for XML Binding(JAXB) Reference Implementation, v2.2.11 
// See <a href="http://java.sun.com/xml/jaxb">http://java.sun.com/xml/jaxb</a> 
// Any modifications to this file will be lost upon recompilation of the source schema. 
// Generated on: 2017.08.24 at 11:14:59 AM CDT 
//


package edu.utdallas.hltri.data.medline.jaxb.struct;

import java.io.Serializable;
import java.util.ArrayList;
import java.util.List;
import javax.xml.bind.annotation.XmlAccessType;
import javax.xml.bind.annotation.XmlAccessorType;
import javax.xml.bind.annotation.XmlElement;
import javax.xml.bind.annotation.XmlRootElement;
import javax.xml.bind.annotation.XmlType;


/**
 * <p>Java class for anonymous complex type.
 * 
 * <p>The following schema fragment specifies the expected content contained within this class.
 * 
 * <pre>
 * &lt;complexType&gt;
 *   &lt;complexContent&gt;
 *     &lt;restriction base="{http://www.w3.org/2001/XMLSchema}anyType"&gt;
 *       &lt;sequence&gt;
 *         &lt;element ref="{}Publisher"/&gt;
 *         &lt;element ref="{}BookTitle"/&gt;
 *         &lt;element ref="{}PubDate"/&gt;
 *         &lt;element ref="{}BeginningDate" minOccurs="0"/&gt;
 *         &lt;element ref="{}EndingDate" minOccurs="0"/&gt;
 *         &lt;element ref="{}AuthorList" maxOccurs="unbounded" minOccurs="0"/&gt;
 *         &lt;element ref="{}InvestigatorList" minOccurs="0"/&gt;
 *         &lt;element ref="{}Volume" minOccurs="0"/&gt;
 *         &lt;element ref="{}VolumeTitle" minOccurs="0"/&gt;
 *         &lt;element ref="{}Edition" minOccurs="0"/&gt;
 *         &lt;element ref="{}CollectionTitle" minOccurs="0"/&gt;
 *         &lt;element ref="{}Isbn" maxOccurs="unbounded" minOccurs="0"/&gt;
 *         &lt;element ref="{}ELocationID" maxOccurs="unbounded" minOccurs="0"/&gt;
 *         &lt;element ref="{}Medium" minOccurs="0"/&gt;
 *         &lt;element ref="{}ReportNumber" minOccurs="0"/&gt;
 *       &lt;/sequence&gt;
 *     &lt;/restriction&gt;
 *   &lt;/complexContent&gt;
 * &lt;/complexType&gt;
 * </pre>
 * 
 * 
 */
@XmlAccessorType(XmlAccessType.FIELD)
@XmlType(name = "", propOrder = {
    "publisher",
    "bookTitle",
    "pubDate",
    "beginningDate",
    "endingDate",
    "authorLists",
    "investigatorList",
    "volume",
    "volumeTitle",
    "edition",
    "collectionTitle",
    "isbns",
    "eLocationIDs",
    "medium",
    "reportNumber"
})
@XmlRootElement(name = "Book")
public class Book implements Serializable
{

    private final static long serialVersionUID = 1L;
    @XmlElement(name = "Publisher", required = true)
    protected Publisher publisher;
    @XmlElement(name = "BookTitle", required = true)
    protected BookTitle bookTitle;
    @XmlElement(name = "PubDate", required = true)
    protected PubDate pubDate;
    @XmlElement(name = "BeginningDate")
    protected BeginningDate beginningDate;
    @XmlElement(name = "EndingDate")
    protected EndingDate endingDate;
    @XmlElement(name = "AuthorList")
    protected List<AuthorList> authorLists;
    @XmlElement(name = "InvestigatorList")
    protected InvestigatorList investigatorList;
    @XmlElement(name = "Volume")
    protected String volume;
    @XmlElement(name = "VolumeTitle")
    protected VolumeTitle volumeTitle;
    @XmlElement(name = "Edition")
    protected String edition;
    @XmlElement(name = "CollectionTitle")
    protected CollectionTitle collectionTitle;
    @XmlElement(name = "Isbn")
    protected List<String> isbns;
    @XmlElement(name = "ELocationID")
    protected List<ELocationID> eLocationIDs;
    @XmlElement(name = "Medium")
    protected String medium;
    @XmlElement(name = "ReportNumber")
    protected String reportNumber;

    /**
     * Gets the value of the publisher property.
     * 
     * @return
     *     possible object is
     *     {@link Publisher }
     *     
     */
    public Publisher getPublisher() {
        return publisher;
    }

    /**
     * Sets the value of the publisher property.
     * 
     * @param value
     *     allowed object is
     *     {@link Publisher }
     *     
     */
    public void setPublisher(Publisher value) {
        this.publisher = value;
    }

    /**
     * Gets the value of the bookTitle property.
     * 
     * @return
     *     possible object is
     *     {@link BookTitle }
     *     
     */
    public BookTitle getBookTitle() {
        return bookTitle;
    }

    /**
     * Sets the value of the bookTitle property.
     * 
     * @param value
     *     allowed object is
     *     {@link BookTitle }
     *     
     */
    public void setBookTitle(BookTitle value) {
        this.bookTitle = value;
    }

    /**
     * Gets the value of the pubDate property.
     * 
     * @return
     *     possible object is
     *     {@link PubDate }
     *     
     */
    public PubDate getPubDate() {
        return pubDate;
    }

    /**
     * Sets the value of the pubDate property.
     * 
     * @param value
     *     allowed object is
     *     {@link PubDate }
     *     
     */
    public void setPubDate(PubDate value) {
        this.pubDate = value;
    }

    /**
     * Gets the value of the beginningDate property.
     * 
     * @return
     *     possible object is
     *     {@link BeginningDate }
     *     
     */
    public BeginningDate getBeginningDate() {
        return beginningDate;
    }

    /**
     * Sets the value of the beginningDate property.
     * 
     * @param value
     *     allowed object is
     *     {@link BeginningDate }
     *     
     */
    public void setBeginningDate(BeginningDate value) {
        this.beginningDate = value;
    }

    /**
     * Gets the value of the endingDate property.
     * 
     * @return
     *     possible object is
     *     {@link EndingDate }
     *     
     */
    public EndingDate getEndingDate() {
        return endingDate;
    }

    /**
     * Sets the value of the endingDate property.
     * 
     * @param value
     *     allowed object is
     *     {@link EndingDate }
     *     
     */
    public void setEndingDate(EndingDate value) {
        this.endingDate = value;
    }

    /**
     * Gets the value of the authorLists property.
     * 
     * <p>
     * This accessor method returns a reference to the live list,
     * not a snapshot. Therefore any modification you make to the
     * returned list will be present inside the JAXB object.
     * This is why there is not a <CODE>set</CODE> method for the authorLists property.
     * 
     * <p>
     * For example, to add a new item, do as follows:
     * <pre>
     *    getAuthorLists().add(newItem);
     * </pre>
     * 
     * 
     * <p>
     * Objects of the following type(s) are allowed in the list
     * {@link AuthorList }
     * 
     * 
     */
    public List<AuthorList> getAuthorLists() {
        if (authorLists == null) {
            authorLists = new ArrayList<AuthorList>();
        }
        return this.authorLists;
    }

    /**
     * Gets the value of the investigatorList property.
     * 
     * @return
     *     possible object is
     *     {@link InvestigatorList }
     *     
     */
    public InvestigatorList getInvestigatorList() {
        return investigatorList;
    }

    /**
     * Sets the value of the investigatorList property.
     * 
     * @param value
     *     allowed object is
     *     {@link InvestigatorList }
     *     
     */
    public void setInvestigatorList(InvestigatorList value) {
        this.investigatorList = value;
    }

    /**
     * Gets the value of the volume property.
     * 
     * @return
     *     possible object is
     *     {@link String }
     *     
     */
    public String getVolume() {
        return volume;
    }

    /**
     * Sets the value of the volume property.
     * 
     * @param value
     *     allowed object is
     *     {@link String }
     *     
     */
    public void setVolume(String value) {
        this.volume = value;
    }

    /**
     * Gets the value of the volumeTitle property.
     * 
     * @return
     *     possible object is
     *     {@link VolumeTitle }
     *     
     */
    public VolumeTitle getVolumeTitle() {
        return volumeTitle;
    }

    /**
     * Sets the value of the volumeTitle property.
     * 
     * @param value
     *     allowed object is
     *     {@link VolumeTitle }
     *     
     */
    public void setVolumeTitle(VolumeTitle value) {
        this.volumeTitle = value;
    }

    /**
     * Gets the value of the edition property.
     * 
     * @return
     *     possible object is
     *     {@link String }
     *     
     */
    public String getEdition() {
        return edition;
    }

    /**
     * Sets the value of the edition property.
     * 
     * @param value
     *     allowed object is
     *     {@link String }
     *     
     */
    public void setEdition(String value) {
        this.edition = value;
    }

    /**
     * Gets the value of the collectionTitle property.
     * 
     * @return
     *     possible object is
     *     {@link CollectionTitle }
     *     
     */
    public CollectionTitle getCollectionTitle() {
        return collectionTitle;
    }

    /**
     * Sets the value of the collectionTitle property.
     * 
     * @param value
     *     allowed object is
     *     {@link CollectionTitle }
     *     
     */
    public void setCollectionTitle(CollectionTitle value) {
        this.collectionTitle = value;
    }

    /**
     * Gets the value of the isbns property.
     * 
     * <p>
     * This accessor method returns a reference to the live list,
     * not a snapshot. Therefore any modification you make to the
     * returned list will be present inside the JAXB object.
     * This is why there is not a <CODE>set</CODE> method for the isbns property.
     * 
     * <p>
     * For example, to add a new item, do as follows:
     * <pre>
     *    getIsbns().add(newItem);
     * </pre>
     * 
     * 
     * <p>
     * Objects of the following type(s) are allowed in the list
     * {@link String }
     * 
     * 
     */
    public List<String> getIsbns() {
        if (isbns == null) {
            isbns = new ArrayList<String>();
        }
        return this.isbns;
    }

    /**
     * Gets the value of the eLocationIDs property.
     * 
     * <p>
     * This accessor method returns a reference to the live list,
     * not a snapshot. Therefore any modification you make to the
     * returned list will be present inside the JAXB object.
     * This is why there is not a <CODE>set</CODE> method for the eLocationIDs property.
     * 
     * <p>
     * For example, to add a new item, do as follows:
     * <pre>
     *    getELocationIDs().add(newItem);
     * </pre>
     * 
     * 
     * <p>
     * Objects of the following type(s) are allowed in the list
     * {@link ELocationID }
     * 
     * 
     */
    public List<ELocationID> getELocationIDs() {
        if (eLocationIDs == null) {
            eLocationIDs = new ArrayList<ELocationID>();
        }
        return this.eLocationIDs;
    }

    /**
     * Gets the value of the medium property.
     * 
     * @return
     *     possible object is
     *     {@link String }
     *     
     */
    public String getMedium() {
        return medium;
    }

    /**
     * Sets the value of the medium property.
     * 
     * @param value
     *     allowed object is
     *     {@link String }
     *     
     */
    public void setMedium(String value) {
        this.medium = value;
    }

    /**
     * Gets the value of the reportNumber property.
     * 
     * @return
     *     possible object is
     *     {@link String }
     *     
     */
    public String getReportNumber() {
        return reportNumber;
    }

    /**
     * Sets the value of the reportNumber property.
     * 
     * @param value
     *     allowed object is
     *     {@link String }
     *     
     */
    public void setReportNumber(String value) {
        this.reportNumber = value;
    }

    public boolean equals(java.lang.Object object) {
        if ((object == null)||(this.getClass()!= object.getClass())) {
            return false;
        }
        if (this == object) {
            return true;
        }
        final Book that = ((Book) object);
        {
            Publisher leftPublisher;
            leftPublisher = this.getPublisher();
            Publisher rightPublisher;
            rightPublisher = that.getPublisher();
            if (this.publisher!= null) {
                if (that.publisher!= null) {
                    if (!leftPublisher.equals(rightPublisher)) {
                        return false;
                    }
                } else {
                    return false;
                }
            } else {
                if (that.publisher!= null) {
                    return false;
                }
            }
        }
        {
            BookTitle leftBookTitle;
            leftBookTitle = this.getBookTitle();
            BookTitle rightBookTitle;
            rightBookTitle = that.getBookTitle();
            if (this.bookTitle!= null) {
                if (that.bookTitle!= null) {
                    if (!leftBookTitle.equals(rightBookTitle)) {
                        return false;
                    }
                } else {
                    return false;
                }
            } else {
                if (that.bookTitle!= null) {
                    return false;
                }
            }
        }
        {
            PubDate leftPubDate;
            leftPubDate = this.getPubDate();
            PubDate rightPubDate;
            rightPubDate = that.getPubDate();
            if (this.pubDate!= null) {
                if (that.pubDate!= null) {
                    if (!leftPubDate.equals(rightPubDate)) {
                        return false;
                    }
                } else {
                    return false;
                }
            } else {
                if (that.pubDate!= null) {
                    return false;
                }
            }
        }
        {
            BeginningDate leftBeginningDate;
            leftBeginningDate = this.getBeginningDate();
            BeginningDate rightBeginningDate;
            rightBeginningDate = that.getBeginningDate();
            if (this.beginningDate!= null) {
                if (that.beginningDate!= null) {
                    if (!leftBeginningDate.equals(rightBeginningDate)) {
                        return false;
                    }
                } else {
                    return false;
                }
            } else {
                if (that.beginningDate!= null) {
                    return false;
                }
            }
        }
        {
            EndingDate leftEndingDate;
            leftEndingDate = this.getEndingDate();
            EndingDate rightEndingDate;
            rightEndingDate = that.getEndingDate();
            if (this.endingDate!= null) {
                if (that.endingDate!= null) {
                    if (!leftEndingDate.equals(rightEndingDate)) {
                        return false;
                    }
                } else {
                    return false;
                }
            } else {
                if (that.endingDate!= null) {
                    return false;
                }
            }
        }
        {
            List<AuthorList> leftAuthorLists;
            leftAuthorLists = (((this.authorLists!= null)&&(!this.authorLists.isEmpty()))?this.getAuthorLists():null);
            List<AuthorList> rightAuthorLists;
            rightAuthorLists = (((that.authorLists!= null)&&(!that.authorLists.isEmpty()))?that.getAuthorLists():null);
            if ((this.authorLists!= null)&&(!this.authorLists.isEmpty())) {
                if ((that.authorLists!= null)&&(!that.authorLists.isEmpty())) {
                    if (!leftAuthorLists.equals(rightAuthorLists)) {
                        return false;
                    }
                } else {
                    return false;
                }
            } else {
                if ((that.authorLists!= null)&&(!that.authorLists.isEmpty())) {
                    return false;
                }
            }
        }
        {
            InvestigatorList leftInvestigatorList;
            leftInvestigatorList = this.getInvestigatorList();
            InvestigatorList rightInvestigatorList;
            rightInvestigatorList = that.getInvestigatorList();
            if (this.investigatorList!= null) {
                if (that.investigatorList!= null) {
                    if (!leftInvestigatorList.equals(rightInvestigatorList)) {
                        return false;
                    }
                } else {
                    return false;
                }
            } else {
                if (that.investigatorList!= null) {
                    return false;
                }
            }
        }
        {
            String leftVolume;
            leftVolume = this.getVolume();
            String rightVolume;
            rightVolume = that.getVolume();
            if (this.volume!= null) {
                if (that.volume!= null) {
                    if (!leftVolume.equals(rightVolume)) {
                        return false;
                    }
                } else {
                    return false;
                }
            } else {
                if (that.volume!= null) {
                    return false;
                }
            }
        }
        {
            VolumeTitle leftVolumeTitle;
            leftVolumeTitle = this.getVolumeTitle();
            VolumeTitle rightVolumeTitle;
            rightVolumeTitle = that.getVolumeTitle();
            if (this.volumeTitle!= null) {
                if (that.volumeTitle!= null) {
                    if (!leftVolumeTitle.equals(rightVolumeTitle)) {
                        return false;
                    }
                } else {
                    return false;
                }
            } else {
                if (that.volumeTitle!= null) {
                    return false;
                }
            }
        }
        {
            String leftEdition;
            leftEdition = this.getEdition();
            String rightEdition;
            rightEdition = that.getEdition();
            if (this.edition!= null) {
                if (that.edition!= null) {
                    if (!leftEdition.equals(rightEdition)) {
                        return false;
                    }
                } else {
                    return false;
                }
            } else {
                if (that.edition!= null) {
                    return false;
                }
            }
        }
        {
            CollectionTitle leftCollectionTitle;
            leftCollectionTitle = this.getCollectionTitle();
            CollectionTitle rightCollectionTitle;
            rightCollectionTitle = that.getCollectionTitle();
            if (this.collectionTitle!= null) {
                if (that.collectionTitle!= null) {
                    if (!leftCollectionTitle.equals(rightCollectionTitle)) {
                        return false;
                    }
                } else {
                    return false;
                }
            } else {
                if (that.collectionTitle!= null) {
                    return false;
                }
            }
        }
        {
            List<String> leftIsbns;
            leftIsbns = (((this.isbns!= null)&&(!this.isbns.isEmpty()))?this.getIsbns():null);
            List<String> rightIsbns;
            rightIsbns = (((that.isbns!= null)&&(!that.isbns.isEmpty()))?that.getIsbns():null);
            if ((this.isbns!= null)&&(!this.isbns.isEmpty())) {
                if ((that.isbns!= null)&&(!that.isbns.isEmpty())) {
                    if (!leftIsbns.equals(rightIsbns)) {
                        return false;
                    }
                } else {
                    return false;
                }
            } else {
                if ((that.isbns!= null)&&(!that.isbns.isEmpty())) {
                    return false;
                }
            }
        }
        {
            List<ELocationID> leftELocationIDs;
            leftELocationIDs = (((this.eLocationIDs!= null)&&(!this.eLocationIDs.isEmpty()))?this.getELocationIDs():null);
            List<ELocationID> rightELocationIDs;
            rightELocationIDs = (((that.eLocationIDs!= null)&&(!that.eLocationIDs.isEmpty()))?that.getELocationIDs():null);
            if ((this.eLocationIDs!= null)&&(!this.eLocationIDs.isEmpty())) {
                if ((that.eLocationIDs!= null)&&(!that.eLocationIDs.isEmpty())) {
                    if (!leftELocationIDs.equals(rightELocationIDs)) {
                        return false;
                    }
                } else {
                    return false;
                }
            } else {
                if ((that.eLocationIDs!= null)&&(!that.eLocationIDs.isEmpty())) {
                    return false;
                }
            }
        }
        {
            String leftMedium;
            leftMedium = this.getMedium();
            String rightMedium;
            rightMedium = that.getMedium();
            if (this.medium!= null) {
                if (that.medium!= null) {
                    if (!leftMedium.equals(rightMedium)) {
                        return false;
                    }
                } else {
                    return false;
                }
            } else {
                if (that.medium!= null) {
                    return false;
                }
            }
        }
        {
            String leftReportNumber;
            leftReportNumber = this.getReportNumber();
            String rightReportNumber;
            rightReportNumber = that.getReportNumber();
            if (this.reportNumber!= null) {
                if (that.reportNumber!= null) {
                    if (!leftReportNumber.equals(rightReportNumber)) {
                        return false;
                    }
                } else {
                    return false;
                }
            } else {
                if (that.reportNumber!= null) {
                    return false;
                }
            }
        }
        return true;
    }

    public int hashCode() {
        int currentHashCode = 1;
        {
            currentHashCode = (currentHashCode* 31);
            Publisher thePublisher;
            thePublisher = this.getPublisher();
            if (this.publisher!= null) {
                currentHashCode += thePublisher.hashCode();
            }
        }
        {
            currentHashCode = (currentHashCode* 31);
            BookTitle theBookTitle;
            theBookTitle = this.getBookTitle();
            if (this.bookTitle!= null) {
                currentHashCode += theBookTitle.hashCode();
            }
        }
        {
            currentHashCode = (currentHashCode* 31);
            PubDate thePubDate;
            thePubDate = this.getPubDate();
            if (this.pubDate!= null) {
                currentHashCode += thePubDate.hashCode();
            }
        }
        {
            currentHashCode = (currentHashCode* 31);
            BeginningDate theBeginningDate;
            theBeginningDate = this.getBeginningDate();
            if (this.beginningDate!= null) {
                currentHashCode += theBeginningDate.hashCode();
            }
        }
        {
            currentHashCode = (currentHashCode* 31);
            EndingDate theEndingDate;
            theEndingDate = this.getEndingDate();
            if (this.endingDate!= null) {
                currentHashCode += theEndingDate.hashCode();
            }
        }
        {
            currentHashCode = (currentHashCode* 31);
            List<AuthorList> theAuthorLists;
            theAuthorLists = (((this.authorLists!= null)&&(!this.authorLists.isEmpty()))?this.getAuthorLists():null);
            if ((this.authorLists!= null)&&(!this.authorLists.isEmpty())) {
                currentHashCode += theAuthorLists.hashCode();
            }
        }
        {
            currentHashCode = (currentHashCode* 31);
            InvestigatorList theInvestigatorList;
            theInvestigatorList = this.getInvestigatorList();
            if (this.investigatorList!= null) {
                currentHashCode += theInvestigatorList.hashCode();
            }
        }
        {
            currentHashCode = (currentHashCode* 31);
            String theVolume;
            theVolume = this.getVolume();
            if (this.volume!= null) {
                currentHashCode += theVolume.hashCode();
            }
        }
        {
            currentHashCode = (currentHashCode* 31);
            VolumeTitle theVolumeTitle;
            theVolumeTitle = this.getVolumeTitle();
            if (this.volumeTitle!= null) {
                currentHashCode += theVolumeTitle.hashCode();
            }
        }
        {
            currentHashCode = (currentHashCode* 31);
            String theEdition;
            theEdition = this.getEdition();
            if (this.edition!= null) {
                currentHashCode += theEdition.hashCode();
            }
        }
        {
            currentHashCode = (currentHashCode* 31);
            CollectionTitle theCollectionTitle;
            theCollectionTitle = this.getCollectionTitle();
            if (this.collectionTitle!= null) {
                currentHashCode += theCollectionTitle.hashCode();
            }
        }
        {
            currentHashCode = (currentHashCode* 31);
            List<String> theIsbns;
            theIsbns = (((this.isbns!= null)&&(!this.isbns.isEmpty()))?this.getIsbns():null);
            if ((this.isbns!= null)&&(!this.isbns.isEmpty())) {
                currentHashCode += theIsbns.hashCode();
            }
        }
        {
            currentHashCode = (currentHashCode* 31);
            List<ELocationID> theELocationIDs;
            theELocationIDs = (((this.eLocationIDs!= null)&&(!this.eLocationIDs.isEmpty()))?this.getELocationIDs():null);
            if ((this.eLocationIDs!= null)&&(!this.eLocationIDs.isEmpty())) {
                currentHashCode += theELocationIDs.hashCode();
            }
        }
        {
            currentHashCode = (currentHashCode* 31);
            String theMedium;
            theMedium = this.getMedium();
            if (this.medium!= null) {
                currentHashCode += theMedium.hashCode();
            }
        }
        {
            currentHashCode = (currentHashCode* 31);
            String theReportNumber;
            theReportNumber = this.getReportNumber();
            if (this.reportNumber!= null) {
                currentHashCode += theReportNumber.hashCode();
            }
        }
        return currentHashCode;
    }

}

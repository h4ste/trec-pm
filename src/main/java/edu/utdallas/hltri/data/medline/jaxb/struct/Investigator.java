//
// This file was generated by the JavaTM Architecture for XML Binding(JAXB) Reference Implementation, v2.2.11 
// See <a href="http://java.sun.com/xml/jaxb">http://java.sun.com/xml/jaxb</a> 
// Any modifications to this file will be lost upon recompilation of the source schema. 
// Generated on: 2017.08.24 at 11:14:59 AM CDT 
//


package edu.utdallas.hltri.data.medline.jaxb.struct;

import java.io.Serializable;
import java.util.ArrayList;
import java.util.List;
import javax.xml.bind.annotation.XmlAccessType;
import javax.xml.bind.annotation.XmlAccessorType;
import javax.xml.bind.annotation.XmlAttribute;
import javax.xml.bind.annotation.XmlElement;
import javax.xml.bind.annotation.XmlRootElement;
import javax.xml.bind.annotation.XmlType;


/**
 * <p>Java class for anonymous complex type.
 * 
 * <p>The following schema fragment specifies the expected content contained within this class.
 * 
 * <pre>
 * &lt;complexType&gt;
 *   &lt;complexContent&gt;
 *     &lt;restriction base="{http://www.w3.org/2001/XMLSchema}anyType"&gt;
 *       &lt;sequence&gt;
 *         &lt;element ref="{}LastName"/&gt;
 *         &lt;element ref="{}ForeName" minOccurs="0"/&gt;
 *         &lt;element ref="{}Initials" minOccurs="0"/&gt;
 *         &lt;element ref="{}Suffix" minOccurs="0"/&gt;
 *         &lt;element ref="{}Identifier" maxOccurs="unbounded" minOccurs="0"/&gt;
 *         &lt;element ref="{}AffiliationInfo" maxOccurs="unbounded" minOccurs="0"/&gt;
 *       &lt;/sequence&gt;
 *       &lt;attribute name="ValidYN" default="Y"&gt;
 *         &lt;simpleType&gt;
 *           &lt;restriction base="{http://www.w3.org/2001/XMLSchema}string"&gt;
 *             &lt;enumeration value="Y"/&gt;
 *             &lt;enumeration value="N"/&gt;
 *           &lt;/restriction&gt;
 *         &lt;/simpleType&gt;
 *       &lt;/attribute&gt;
 *     &lt;/restriction&gt;
 *   &lt;/complexContent&gt;
 * &lt;/complexType&gt;
 * </pre>
 * 
 * 
 */
@XmlAccessorType(XmlAccessType.FIELD)
@XmlType(name = "", propOrder = {
    "lastName",
    "foreName",
    "initials",
    "suffix",
    "identifiers",
    "affiliationInfos"
})
@XmlRootElement(name = "Investigator")
public class Investigator implements Serializable
{

    private final static long serialVersionUID = 1L;
    @XmlElement(name = "LastName", required = true)
    protected String lastName;
    @XmlElement(name = "ForeName")
    protected String foreName;
    @XmlElement(name = "Initials")
    protected String initials;
    @XmlElement(name = "Suffix")
    protected Suffix suffix;
    @XmlElement(name = "Identifier")
    protected List<Identifier> identifiers;
    @XmlElement(name = "AffiliationInfo")
    protected List<AffiliationInfo> affiliationInfos;
    @XmlAttribute(name = "ValidYN")
    protected String validYN;

    /**
     * Gets the value of the lastName property.
     * 
     * @return
     *     possible object is
     *     {@link String }
     *     
     */
    public String getLastName() {
        return lastName;
    }

    /**
     * Sets the value of the lastName property.
     * 
     * @param value
     *     allowed object is
     *     {@link String }
     *     
     */
    public void setLastName(String value) {
        this.lastName = value;
    }

    /**
     * Gets the value of the foreName property.
     * 
     * @return
     *     possible object is
     *     {@link String }
     *     
     */
    public String getForeName() {
        return foreName;
    }

    /**
     * Sets the value of the foreName property.
     * 
     * @param value
     *     allowed object is
     *     {@link String }
     *     
     */
    public void setForeName(String value) {
        this.foreName = value;
    }

    /**
     * Gets the value of the initials property.
     * 
     * @return
     *     possible object is
     *     {@link String }
     *     
     */
    public String getInitials() {
        return initials;
    }

    /**
     * Sets the value of the initials property.
     * 
     * @param value
     *     allowed object is
     *     {@link String }
     *     
     */
    public void setInitials(String value) {
        this.initials = value;
    }

    /**
     * Gets the value of the suffix property.
     * 
     * @return
     *     possible object is
     *     {@link Suffix }
     *     
     */
    public Suffix getSuffix() {
        return suffix;
    }

    /**
     * Sets the value of the suffix property.
     * 
     * @param value
     *     allowed object is
     *     {@link Suffix }
     *     
     */
    public void setSuffix(Suffix value) {
        this.suffix = value;
    }

    /**
     * Gets the value of the identifiers property.
     * 
     * <p>
     * This accessor method returns a reference to the live list,
     * not a snapshot. Therefore any modification you make to the
     * returned list will be present inside the JAXB object.
     * This is why there is not a <CODE>set</CODE> method for the identifiers property.
     * 
     * <p>
     * For example, to add a new item, do as follows:
     * <pre>
     *    getIdentifiers().add(newItem);
     * </pre>
     * 
     * 
     * <p>
     * Objects of the following type(s) are allowed in the list
     * {@link Identifier }
     * 
     * 
     */
    public List<Identifier> getIdentifiers() {
        if (identifiers == null) {
            identifiers = new ArrayList<Identifier>();
        }
        return this.identifiers;
    }

    /**
     * Gets the value of the affiliationInfos property.
     * 
     * <p>
     * This accessor method returns a reference to the live list,
     * not a snapshot. Therefore any modification you make to the
     * returned list will be present inside the JAXB object.
     * This is why there is not a <CODE>set</CODE> method for the affiliationInfos property.
     * 
     * <p>
     * For example, to add a new item, do as follows:
     * <pre>
     *    getAffiliationInfos().add(newItem);
     * </pre>
     * 
     * 
     * <p>
     * Objects of the following type(s) are allowed in the list
     * {@link AffiliationInfo }
     * 
     * 
     */
    public List<AffiliationInfo> getAffiliationInfos() {
        if (affiliationInfos == null) {
            affiliationInfos = new ArrayList<AffiliationInfo>();
        }
        return this.affiliationInfos;
    }

    /**
     * Gets the value of the validYN property.
     * 
     * @return
     *     possible object is
     *     {@link String }
     *     
     */
    public String getValidYN() {
        if (validYN == null) {
            return "Y";
        } else {
            return validYN;
        }
    }

    /**
     * Sets the value of the validYN property.
     * 
     * @param value
     *     allowed object is
     *     {@link String }
     *     
     */
    public void setValidYN(String value) {
        this.validYN = value;
    }

    public boolean equals(java.lang.Object object) {
        if ((object == null)||(this.getClass()!= object.getClass())) {
            return false;
        }
        if (this == object) {
            return true;
        }
        final Investigator that = ((Investigator) object);
        {
            String leftLastName;
            leftLastName = this.getLastName();
            String rightLastName;
            rightLastName = that.getLastName();
            if (this.lastName!= null) {
                if (that.lastName!= null) {
                    if (!leftLastName.equals(rightLastName)) {
                        return false;
                    }
                } else {
                    return false;
                }
            } else {
                if (that.lastName!= null) {
                    return false;
                }
            }
        }
        {
            String leftForeName;
            leftForeName = this.getForeName();
            String rightForeName;
            rightForeName = that.getForeName();
            if (this.foreName!= null) {
                if (that.foreName!= null) {
                    if (!leftForeName.equals(rightForeName)) {
                        return false;
                    }
                } else {
                    return false;
                }
            } else {
                if (that.foreName!= null) {
                    return false;
                }
            }
        }
        {
            String leftInitials;
            leftInitials = this.getInitials();
            String rightInitials;
            rightInitials = that.getInitials();
            if (this.initials!= null) {
                if (that.initials!= null) {
                    if (!leftInitials.equals(rightInitials)) {
                        return false;
                    }
                } else {
                    return false;
                }
            } else {
                if (that.initials!= null) {
                    return false;
                }
            }
        }
        {
            Suffix leftSuffix;
            leftSuffix = this.getSuffix();
            Suffix rightSuffix;
            rightSuffix = that.getSuffix();
            if (this.suffix!= null) {
                if (that.suffix!= null) {
                    if (!leftSuffix.equals(rightSuffix)) {
                        return false;
                    }
                } else {
                    return false;
                }
            } else {
                if (that.suffix!= null) {
                    return false;
                }
            }
        }
        {
            List<Identifier> leftIdentifiers;
            leftIdentifiers = (((this.identifiers!= null)&&(!this.identifiers.isEmpty()))?this.getIdentifiers():null);
            List<Identifier> rightIdentifiers;
            rightIdentifiers = (((that.identifiers!= null)&&(!that.identifiers.isEmpty()))?that.getIdentifiers():null);
            if ((this.identifiers!= null)&&(!this.identifiers.isEmpty())) {
                if ((that.identifiers!= null)&&(!that.identifiers.isEmpty())) {
                    if (!leftIdentifiers.equals(rightIdentifiers)) {
                        return false;
                    }
                } else {
                    return false;
                }
            } else {
                if ((that.identifiers!= null)&&(!that.identifiers.isEmpty())) {
                    return false;
                }
            }
        }
        {
            List<AffiliationInfo> leftAffiliationInfos;
            leftAffiliationInfos = (((this.affiliationInfos!= null)&&(!this.affiliationInfos.isEmpty()))?this.getAffiliationInfos():null);
            List<AffiliationInfo> rightAffiliationInfos;
            rightAffiliationInfos = (((that.affiliationInfos!= null)&&(!that.affiliationInfos.isEmpty()))?that.getAffiliationInfos():null);
            if ((this.affiliationInfos!= null)&&(!this.affiliationInfos.isEmpty())) {
                if ((that.affiliationInfos!= null)&&(!that.affiliationInfos.isEmpty())) {
                    if (!leftAffiliationInfos.equals(rightAffiliationInfos)) {
                        return false;
                    }
                } else {
                    return false;
                }
            } else {
                if ((that.affiliationInfos!= null)&&(!that.affiliationInfos.isEmpty())) {
                    return false;
                }
            }
        }
        {
            String leftValidYN;
            leftValidYN = this.getValidYN();
            String rightValidYN;
            rightValidYN = that.getValidYN();
            if (this.validYN!= null) {
                if (that.validYN!= null) {
                    if (!leftValidYN.equals(rightValidYN)) {
                        return false;
                    }
                } else {
                    return false;
                }
            } else {
                if (that.validYN!= null) {
                    return false;
                }
            }
        }
        return true;
    }

    public int hashCode() {
        int currentHashCode = 1;
        {
            currentHashCode = (currentHashCode* 31);
            String theLastName;
            theLastName = this.getLastName();
            if (this.lastName!= null) {
                currentHashCode += theLastName.hashCode();
            }
        }
        {
            currentHashCode = (currentHashCode* 31);
            String theForeName;
            theForeName = this.getForeName();
            if (this.foreName!= null) {
                currentHashCode += theForeName.hashCode();
            }
        }
        {
            currentHashCode = (currentHashCode* 31);
            String theInitials;
            theInitials = this.getInitials();
            if (this.initials!= null) {
                currentHashCode += theInitials.hashCode();
            }
        }
        {
            currentHashCode = (currentHashCode* 31);
            Suffix theSuffix;
            theSuffix = this.getSuffix();
            if (this.suffix!= null) {
                currentHashCode += theSuffix.hashCode();
            }
        }
        {
            currentHashCode = (currentHashCode* 31);
            List<Identifier> theIdentifiers;
            theIdentifiers = (((this.identifiers!= null)&&(!this.identifiers.isEmpty()))?this.getIdentifiers():null);
            if ((this.identifiers!= null)&&(!this.identifiers.isEmpty())) {
                currentHashCode += theIdentifiers.hashCode();
            }
        }
        {
            currentHashCode = (currentHashCode* 31);
            List<AffiliationInfo> theAffiliationInfos;
            theAffiliationInfos = (((this.affiliationInfos!= null)&&(!this.affiliationInfos.isEmpty()))?this.getAffiliationInfos():null);
            if ((this.affiliationInfos!= null)&&(!this.affiliationInfos.isEmpty())) {
                currentHashCode += theAffiliationInfos.hashCode();
            }
        }
        {
            currentHashCode = (currentHashCode* 31);
            String theValidYN;
            theValidYN = this.getValidYN();
            if (this.validYN!= null) {
                currentHashCode += theValidYN.hashCode();
            }
        }
        return currentHashCode;
    }

}

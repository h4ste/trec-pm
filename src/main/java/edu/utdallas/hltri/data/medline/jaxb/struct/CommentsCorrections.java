//
// This file was generated by the JavaTM Architecture for XML Binding(JAXB) Reference Implementation, v2.2.11 
// See <a href="http://java.sun.com/xml/jaxb">http://java.sun.com/xml/jaxb</a> 
// Any modifications to this file will be lost upon recompilation of the source schema. 
// Generated on: 2017.08.24 at 11:14:59 AM CDT 
//


package edu.utdallas.hltri.data.medline.jaxb.struct;

import java.io.Serializable;
import javax.xml.bind.annotation.XmlAccessType;
import javax.xml.bind.annotation.XmlAccessorType;
import javax.xml.bind.annotation.XmlAttribute;
import javax.xml.bind.annotation.XmlElement;
import javax.xml.bind.annotation.XmlRootElement;
import javax.xml.bind.annotation.XmlType;


/**
 * <p>Java class for anonymous complex type.
 * 
 * <p>The following schema fragment specifies the expected content contained within this class.
 * 
 * <pre>
 * &lt;complexType&gt;
 *   &lt;complexContent&gt;
 *     &lt;restriction base="{http://www.w3.org/2001/XMLSchema}anyType"&gt;
 *       &lt;sequence&gt;
 *         &lt;element ref="{}RefSource"/&gt;
 *         &lt;element ref="{}PMID" minOccurs="0"/&gt;
 *         &lt;element ref="{}Note" minOccurs="0"/&gt;
 *       &lt;/sequence&gt;
 *       &lt;attribute name="RefType" use="required"&gt;
 *         &lt;simpleType&gt;
 *           &lt;restriction base="{http://www.w3.org/2001/XMLSchema}string"&gt;
 *             &lt;enumeration value="AssociatedDataset"/&gt;
 *             &lt;enumeration value="AssociatedPublication"/&gt;
 *             &lt;enumeration value="CommentOn"/&gt;
 *             &lt;enumeration value="CommentIn"/&gt;
 *             &lt;enumeration value="ErratumIn"/&gt;
 *             &lt;enumeration value="ErratumFor"/&gt;
 *             &lt;enumeration value="ExpressionOfConcernIn"/&gt;
 *             &lt;enumeration value="ExpressionOfConcernFor"/&gt;
 *             &lt;enumeration value="RepublishedFrom"/&gt;
 *             &lt;enumeration value="RepublishedIn"/&gt;
 *             &lt;enumeration value="RetractionOf"/&gt;
 *             &lt;enumeration value="RetractionIn"/&gt;
 *             &lt;enumeration value="UpdateIn"/&gt;
 *             &lt;enumeration value="UpdateOf"/&gt;
 *             &lt;enumeration value="SummaryForPatientsIn"/&gt;
 *             &lt;enumeration value="OriginalReportIn"/&gt;
 *             &lt;enumeration value="ReprintOf"/&gt;
 *             &lt;enumeration value="ReprintIn"/&gt;
 *             &lt;enumeration value="Cites"/&gt;
 *           &lt;/restriction&gt;
 *         &lt;/simpleType&gt;
 *       &lt;/attribute&gt;
 *     &lt;/restriction&gt;
 *   &lt;/complexContent&gt;
 * &lt;/complexType&gt;
 * </pre>
 * 
 * 
 */
@XmlAccessorType(XmlAccessType.FIELD)
@XmlType(name = "", propOrder = {
    "refSource",
    "pmid",
    "note"
})
@XmlRootElement(name = "CommentsCorrections")
public class CommentsCorrections implements Serializable
{

    private final static long serialVersionUID = 1L;
    @XmlElement(name = "RefSource", required = true)
    protected String refSource;
    @XmlElement(name = "PMID")
    protected PMID pmid;
    @XmlElement(name = "Note")
    protected String note;
    @XmlAttribute(name = "RefType", required = true)
    protected String refType;

    /**
     * Gets the value of the refSource property.
     * 
     * @return
     *     possible object is
     *     {@link String }
     *     
     */
    public String getRefSource() {
        return refSource;
    }

    /**
     * Sets the value of the refSource property.
     * 
     * @param value
     *     allowed object is
     *     {@link String }
     *     
     */
    public void setRefSource(String value) {
        this.refSource = value;
    }

    /**
     * Gets the value of the pmid property.
     * 
     * @return
     *     possible object is
     *     {@link PMID }
     *     
     */
    public PMID getPMID() {
        return pmid;
    }

    /**
     * Sets the value of the pmid property.
     * 
     * @param value
     *     allowed object is
     *     {@link PMID }
     *     
     */
    public void setPMID(PMID value) {
        this.pmid = value;
    }

    /**
     * Gets the value of the note property.
     * 
     * @return
     *     possible object is
     *     {@link String }
     *     
     */
    public String getNote() {
        return note;
    }

    /**
     * Sets the value of the note property.
     * 
     * @param value
     *     allowed object is
     *     {@link String }
     *     
     */
    public void setNote(String value) {
        this.note = value;
    }

    /**
     * Gets the value of the refType property.
     * 
     * @return
     *     possible object is
     *     {@link String }
     *     
     */
    public String getRefType() {
        return refType;
    }

    /**
     * Sets the value of the refType property.
     * 
     * @param value
     *     allowed object is
     *     {@link String }
     *     
     */
    public void setRefType(String value) {
        this.refType = value;
    }

    public boolean equals(java.lang.Object object) {
        if ((object == null)||(this.getClass()!= object.getClass())) {
            return false;
        }
        if (this == object) {
            return true;
        }
        final CommentsCorrections that = ((CommentsCorrections) object);
        {
            String leftRefSource;
            leftRefSource = this.getRefSource();
            String rightRefSource;
            rightRefSource = that.getRefSource();
            if (this.refSource!= null) {
                if (that.refSource!= null) {
                    if (!leftRefSource.equals(rightRefSource)) {
                        return false;
                    }
                } else {
                    return false;
                }
            } else {
                if (that.refSource!= null) {
                    return false;
                }
            }
        }
        {
            PMID leftPMID;
            leftPMID = this.getPMID();
            PMID rightPMID;
            rightPMID = that.getPMID();
            if (this.pmid!= null) {
                if (that.pmid!= null) {
                    if (!leftPMID.equals(rightPMID)) {
                        return false;
                    }
                } else {
                    return false;
                }
            } else {
                if (that.pmid!= null) {
                    return false;
                }
            }
        }
        {
            String leftNote;
            leftNote = this.getNote();
            String rightNote;
            rightNote = that.getNote();
            if (this.note!= null) {
                if (that.note!= null) {
                    if (!leftNote.equals(rightNote)) {
                        return false;
                    }
                } else {
                    return false;
                }
            } else {
                if (that.note!= null) {
                    return false;
                }
            }
        }
        {
            String leftRefType;
            leftRefType = this.getRefType();
            String rightRefType;
            rightRefType = that.getRefType();
            if (this.refType!= null) {
                if (that.refType!= null) {
                    if (!leftRefType.equals(rightRefType)) {
                        return false;
                    }
                } else {
                    return false;
                }
            } else {
                if (that.refType!= null) {
                    return false;
                }
            }
        }
        return true;
    }

    public int hashCode() {
        int currentHashCode = 1;
        {
            currentHashCode = (currentHashCode* 31);
            String theRefSource;
            theRefSource = this.getRefSource();
            if (this.refSource!= null) {
                currentHashCode += theRefSource.hashCode();
            }
        }
        {
            currentHashCode = (currentHashCode* 31);
            PMID thePMID;
            thePMID = this.getPMID();
            if (this.pmid!= null) {
                currentHashCode += thePMID.hashCode();
            }
        }
        {
            currentHashCode = (currentHashCode* 31);
            String theNote;
            theNote = this.getNote();
            if (this.note!= null) {
                currentHashCode += theNote.hashCode();
            }
        }
        {
            currentHashCode = (currentHashCode* 31);
            String theRefType;
            theRefType = this.getRefType();
            if (this.refType!= null) {
                currentHashCode += theRefType.hashCode();
            }
        }
        return currentHashCode;
    }

}
